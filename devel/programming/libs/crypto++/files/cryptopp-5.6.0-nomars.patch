diff -up ./bench.cpp.nomars ./bench.cpp
--- ./bench.cpp.nomars	2009-03-15 02:48:00.000000000 +0100
+++ ./bench.cpp	2009-03-20 22:55:22.000000000 +0100
@@ -291,7 +291,6 @@ void BenchmarkAll(double t, double hertz
 	BenchMarkByName<SymmetricCipher>("Serpent/CTR");
 	BenchMarkByName<SymmetricCipher>("CAST-256/CTR");
 	BenchMarkByName<SymmetricCipher>("RC6/CTR");
-	BenchMarkByName<SymmetricCipher>("MARS/CTR");
 	BenchMarkByName<SymmetricCipher>("SHACAL-2/CTR", 16);
 	BenchMarkByName<SymmetricCipher>("SHACAL-2/CTR", 64);
 	BenchMarkByName<SymmetricCipher>("DES/CTR");
diff -up ./regtest.cpp.nomars ./regtest.cpp
--- ./regtest.cpp.nomars	2009-03-20 22:57:41.000000000 +0100
+++ ./regtest.cpp	2009-03-20 22:57:48.000000000 +0100
@@ -32,7 +32,6 @@
 #include "serpent.h"
 #include "cast.h"
 #include "rc6.h"
-#include "mars.h"
 #include "shacal2.h"
 #include "des.h"
 #include "idea.h"
@@ -120,7 +119,6 @@ void RegisterFactories()
 	RegisterSymmetricCipherDefaultFactories<CTR_Mode<Serpent> >();
 	RegisterSymmetricCipherDefaultFactories<CTR_Mode<CAST256> >();
 	RegisterSymmetricCipherDefaultFactories<CTR_Mode<RC6> >();
-	RegisterSymmetricCipherDefaultFactories<CTR_Mode<MARS> >();
 	RegisterSymmetricCipherDefaultFactories<CTR_Mode<SHACAL2> >();
 	RegisterSymmetricCipherDefaultFactories<CTR_Mode<DES> >();
 	RegisterSymmetricCipherDefaultFactories<CTR_Mode<DES_XEX3> >();
diff -up ./test.cpp.nomars ./test.cpp
--- ./test.cpp.nomars	2009-03-15 02:48:00.000000000 +0100
+++ ./test.cpp	2009-03-20 22:55:46.000000000 +0100
@@ -810,7 +810,6 @@ bool Validate(int alg, bool thorough, co
 	case 36: result = ValidateSquare(); break;
 	case 37: result = ValidateRC2(); break;
 	case 38: result = ValidateRC6(); break;
-	case 39: result = ValidateMARS(); break;
 	case 40: result = ValidateRW(); break;
 	case 41: result = ValidateMD2(); break;
 	case 42: result = ValidateNR(); break;
diff -up ./validat1.cpp.nomars ./validat1.cpp
--- ./validat1.cpp.nomars	2009-03-15 02:48:02.000000000 +0100
+++ ./validat1.cpp	2009-03-20 22:56:20.000000000 +0100
@@ -25,7 +25,6 @@
 #include "square.h"
 #include "seal.h"
 #include "rc6.h"
-#include "mars.h"
 #include "rijndael.h"
 #include "twofish.h"
 #include "serpent.h"
@@ -84,7 +83,6 @@ bool ValidateAll(bool thorough)
 	pass=ValidateSKIPJACK() && pass;
 	pass=ValidateSEAL() && pass;
 	pass=ValidateRC6() && pass;
-	pass=ValidateMARS() && pass;
 	pass=ValidateRijndael() && pass;
 	pass=ValidateTwofish() && pass;
 	pass=ValidateSerpent() && pass;
@@ -1102,18 +1100,6 @@ bool ValidateRC6()
 	return pass;
 }
 
-bool ValidateMARS()
-{
-	cout << "\nMARS validation suite running...\n\n";
-
-	FileSource valdata("TestData/marsval.dat", true, new HexDecoder);
-	bool pass = true;
-	pass = BlockTransformationTest(FixedRoundsCipherFactory<MARSEncryption, MARSDecryption>(16), valdata, 4) && pass;
-	pass = BlockTransformationTest(FixedRoundsCipherFactory<MARSEncryption, MARSDecryption>(24), valdata, 3) && pass;
-	pass = BlockTransformationTest(FixedRoundsCipherFactory<MARSEncryption, MARSDecryption>(32), valdata, 2) && pass;
-	return pass;
-}
-
 bool ValidateRijndael()
 {
 	cout << "\nRijndael (AES) validation suite running...\n\n";
diff -up ./validate.h.nomars ./validate.h
--- ./validate.h.nomars	2009-03-01 19:44:00.000000000 +0100
+++ ./validate.h	2009-03-20 22:56:38.000000000 +0100
@@ -42,7 +42,6 @@ bool ValidateCAST();
 bool ValidateSquare();
 bool ValidateSKIPJACK();
 bool ValidateRC6();
-bool ValidateMARS();
 bool ValidateRijndael();
 bool ValidateTwofish();
 bool ValidateSerpent();
