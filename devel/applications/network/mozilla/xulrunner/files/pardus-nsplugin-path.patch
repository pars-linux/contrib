--- xpcom/io/nsAppFileLocationProvider.cpp.orig	2009-01-31 01:35:21.000000000 +0200
+++ xpcom/io/nsAppFileLocationProvider.cpp	2009-02-01 13:36:39.000000000 +0200
@@ -109,6 +109,10 @@
 #define PLUGINS_DIR_NAME            NS_LITERAL_CSTRING("plugins")
 #define SEARCH_DIR_NAME             NS_LITERAL_CSTRING("searchplugins")
 
+#ifndef PARDUS_NS_PLUGINS_DIR
+#define PARDUS_NS_PLUGINS_DIR "/usr/lib/nsbrowser/plugins/"
+#endif
+
 //*****************************************************************************
 // nsAppFileLocationProvider::Constructor/Destructor
 //*****************************************************************************
@@ -254,6 +258,10 @@
         if (NS_SUCCEEDED(rv))
             rv = localFile->AppendRelativeNativePath(PLUGINS_DIR_NAME);
     }
+    else if (nsCRT::strcmp(prop, PARDUS_NS_PLUGINS_DIR) == 0)
+    {
+        rv = NS_NewNativeLocalFile(nsDependentCString(PARDUS_NS_PLUGINS_DIR), PR_TRUE, getter_AddRefs(localFile));
+    }
 #endif
     else if (nsCRT::strcmp(prop, NS_APP_SEARCH_DIR) == 0)
     {
@@ -596,7 +604,7 @@
 
         *_retval = new nsAppDirectoryEnumerator(this, keys);
 #else
-        static const char* keys[] = { nsnull, NS_USER_PLUGINS_DIR, NS_APP_PLUGINS_DIR, nsnull };
+        static const char* keys[] = { nsnull, PARDUS_NS_PLUGINS_DIR, NS_USER_PLUGINS_DIR, NS_APP_PLUGINS_DIR, nsnull };
         if (!keys[0] && !(keys[0] = PR_GetEnv("MOZ_PLUGIN_PATH"))) {
             static const char nullstr = 0;
             keys[0] = &nullstr;
