diff -u'rNF^function' plug-ins/bracketing_to_hdr/core/br_Image.cpp plug-ins/bracketing_to_hdr/core/br_Image.cpp
--- plug-ins/bracketing_to_hdr/core/br_Image.cpp	old
+++ plug-ins/bracketing_to_hdr/core/br_Image.cpp	new
@@ -25,7 +25,7 @@
   Referenzaehlende Image-Klasse.
 */
 #include <iostream>
-//#include <cmath>                  // pow()
+#include <cmath>                  // pow()
 
 #include "br_types.hpp"             // ImageID
 #include "br_enums.hpp"             // DataType, ReportWhat

diff -u'rNF^function' plug-ins/bracketing_to_hdr/core/br_ImgScheme1D.hpp plug-ins/bracketing_to_hdr/core/br_ImgScheme1D.hpp
--- plug-ins/bracketing_to_hdr/core/br_ImgScheme1D.hpp	old
+++ plug-ins/bracketing_to_hdr/core/br_ImgScheme1D.hpp	new
@@ -72,7 +72,7 @@
       
     ImgView1D() {}  // Zum Anlegen von Vektoren Default-Ctor noetig
     
-    int n_pixel() const         {return dim();}  // Name fuer Bild-Kontexte
+    int n_pixel() const         {return Scheme1D<T>::dim();}  // Name fuer Bild-Kontexte
 };   
 
 
@@ -105,7 +105,7 @@
       
     ImgScheme1D() {}    // Zum Anlegen von Vektoren Default-Ctor noetig
     
-    int n_pixel() const         {return dim();}  // Name fuer Bild-Kontexte
+    int n_pixel() const         {return Scheme1D<T>::dim();}  // Name fuer Bild-Kontexte
 };   
 
 #if 0
diff -u'rNF^function' plug-ins/bracketing_to_hdr/core/br_PackBase.hpp plug-ins/bracketing_to_hdr/core/br_PackBase.hpp
--- plug-ins/bracketing_to_hdr/core/br_PackBase.hpp	old
+++ plug-ins/bracketing_to_hdr/core/br_PackBase.hpp	new
@@ -28,6 +28,7 @@
 #ifndef br_PackBase_hpp
 #define br_PackBase_hpp
 
+#include <cmath>                  // log()
 
 #include <vector>
 #include "TNT/tnt_array1d.hpp"    // TNT::Array1D<>
diff -u'rNF^function' plug-ins/bracketing_to_hdr/core/Distributor.hpp plug-ins/bracketing_to_hdr/core/Distributor.hpp
--- plug-ins/bracketing_to_hdr/core/Distributor.hpp	old
+++ plug-ins/bracketing_to_hdr/core/Distributor.hpp	new
@@ -128,11 +128,10 @@
 template <typename T> 
 class ValueDistributor : public DistributorBase
 {
+public:
     // We redefine logout(fp), but need again Base::logout(userdata):
     using DistributorBase::logout;
-
-public:
-    /** 
+/** 
     *   A callback type reflecting the type `T' in the first argument:
     * 
     *   @param pData: pointer to a T-value to distribute
diff -u'rNF^function' plug-ins/bracketing_to_hdr/core/WeightFunc.hpp plug-ins/bracketing_to_hdr/core/WeightFunc.hpp
--- plug-ins/bracketing_to_hdr/core/WeightFunc.hpp	old
+++ plug-ins/bracketing_to_hdr/core/WeightFunc.hpp	new
@@ -215,7 +215,7 @@
    einer allgemeinen (template-tauglichen) Definition der virt. Funktion.
 
 =============================================================================*/
-template <typename Unsign>
+/*template <typename Unsign>
 class WeightFunc_Triangle : public WeightFunc<Unsign> 
 {
    Unsign zmin_, zmid_;                        // neben `zmax_´ in base class
@@ -238,7 +238,7 @@
         return ((z <= zmid_) ? (z - zmin_) : (zmax_ - z)) / Tweight(zmid_);
       }
 };
-
+*/
 
 //======================
 // Spezialisierungen...
